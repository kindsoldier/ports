--- ./SConstruct.orig	2022-11-01 20:21:44.000000000 +0200
+++ ./SConstruct	2023-03-25 15:17:11.946514000 +0200
@@ -1247,9 +1247,9 @@
     print(env_vars.GenerateHelpText(env))
     Exit(0)
 
-unknown_vars = env_vars.UnknownVariables()
-if unknown_vars:
-    env.FatalError("Unknown variables specified: {0}", ", ".join(list(unknown_vars.keys())))
+#unknown_vars = env_vars.UnknownVariables()
+#if unknown_vars:
+#    env.FatalError("Unknown variables specified: {0}", ", ".join(list(unknown_vars.keys())))
 
 install_actions.setup(env, get_option('install-action'))
 
@@ -2150,7 +2150,7 @@
             # If runtime hardening is requested, then build anything
             # destined for an executable with the necessary flags for PIE.
             env.AppendUnique(
-                PROGCCFLAGS=['-fPIE'],
+                PROGCCFLAGS=['-fpic'],
                 PROGLINKFLAGS=['-pie'],
             )
 
@@ -2158,14 +2158,13 @@
     env.Append( CCFLAGS=["-fno-omit-frame-pointer",
                          "-fno-strict-aliasing",
                          "-fasynchronous-unwind-tables",
-                         "-ggdb" if not env.TargetOSIs('emscripten') else "-g",
                          "-pthread",
                          "-Wall",
                          "-Wsign-compare",
                          "-Wno-unknown-pragmas",
                          "-Winvalid-pch"] )
     # env.Append( " -Wconversion" ) TODO: this doesn't really work yet
-    if env.TargetOSIs('linux', 'darwin', 'solaris'):
+    if env.TargetOSIs('linux', 'darwin', 'solaris', 'freebsd'):
         if not has_option("disable-warnings-as-errors"):
             env.Append( CCFLAGS=["-Werror"] )
 
@@ -2202,11 +2201,11 @@
         env.Append( LINKFLAGS=["-fprofile-arcs", "-ftest-coverage", "-fprofile-update=single"] )
 
     if optBuild and not optBuildForSize:
-        env.Append( CCFLAGS=["-O2"] )
+        env.Append( CCFLAGS=["-O"] )
     elif optBuild and optBuildForSize:
         env.Append( CCFLAGS=["-Os"] )
     else:
-        env.Append( CCFLAGS=["-O0"] )
+        env.Append( CCFLAGS=["-O"] )
 
     # Promote linker warnings into errors. We can't yet do this on OS X because its linker considers
     # noall_load obsolete and warns about it.
