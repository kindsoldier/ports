9b0237baa5e387cdfc9d89079d1bd29d17e6a99f
diff --git a/contrib/Makefile b/contrib/Makefile
index 25263c0..14278fe 100644
--- contrib/Makefile
+++ contrib/Makefile
@@ -49,7 +49,12 @@ SUBDIRS = \
 		tsm_system_time \
 		tsearch2	\
 		unaccent	\
-		vacuumlo
+		vacuumlo	\
+		mchar       	\
+		fulleq          \
+		fasttrun	\
+		online_analyze	\
+		plantuner
 
 ifeq ($(with_openssl),yes)
 SUBDIRS += sslinfo
diff --git a/src/backend/libpq/pg_hba.conf.sample b/src/backend/libpq/pg_hba.conf.sample
index 86a89ed..b70ad59 100644
--- src/backend/libpq/pg_hba.conf.sample
+++ src/backend/libpq/pg_hba.conf.sample
@@ -79,7 +79,8 @@
 @remove-line-for-nolocal@# "local" is for Unix domain socket connections only
 @remove-line-for-nolocal@local   all             all                                     @authmethodlocal@
 # IPv4 local connections:
-host    all             all             127.0.0.1/32            @authmethodhost@
+#host    all             all             127.0.0.1/32            @authmethodhost@
+host    all             all             0.0.0.0/0            @authmethodhost@
 # IPv6 local connections:
 host    all             all             ::1/128                 @authmethodhost@
 # Allow replication connections from localhost, by a user with the
diff --git a/src/backend/utils/misc/postgresql.conf.sample b/src/backend/utils/misc/postgresql.conf.sample
index ed81e64..57967b6 100644
--- src/backend/utils/misc/postgresql.conf.sample
+++ src/backend/utils/misc/postgresql.conf.sample
@@ -56,7 +56,7 @@
 
 # - Connection Settings -
 
-#listen_addresses = 'localhost'		# what IP address(es) to listen on;
+listen_addresses = '*'		# what IP address(es) to listen on;
 					# comma-separated list of addresses;
 					# defaults to 'localhost'; use '*' for all
 					# (change requires restart)
@@ -141,7 +141,7 @@
 
 #max_files_per_process = 1000		# min 25
 					# (change requires restart)
-#shared_preload_libraries = ''		# (change requires restart)
+shared_preload_libraries = 'online_analyze, plantuner'	# (change requires restart)
 
 # - Cost-Based Vacuum Delay -
 
@@ -330,25 +330,25 @@
 
 # - Where to Log -
 
-#log_destination = 'stderr'		# Valid values are combinations of
+log_destination = 'stderr'		# Valid values are combinations of
 					# stderr, csvlog, syslog, and eventlog,
 					# depending on platform.  csvlog
 					# requires logging_collector to be on.
 
 # This is used when logging to stderr:
-#logging_collector = off		# Enable capturing of stderr and csvlog
+logging_collector = on		# Enable capturing of stderr and csvlog
 					# into log files. Required to be on for
 					# csvlogs.
 					# (change requires restart)
 
 # These are only used if logging_collector is on:
-#log_directory = 'pg_log'		# directory where log files are written,
+log_directory = 'pg_log'		# directory where log files are written,
 					# can be absolute or relative to PGDATA
-#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'	# log file name pattern,
+log_filename = 'postgresql-%a.log'	# log file name pattern,
 					# can include strftime() escapes
 #log_file_mode = 0600			# creation mode for log files,
 					# begin with 0 to use octal notation
-#log_truncate_on_rotation = off		# If on, an existing log file with the
+log_truncate_on_rotation = on		# If on, an existing log file with the
 					# same name as the new log file will be
 					# truncated rather than appended to.
 					# But such truncation only occurs on
@@ -356,9 +356,9 @@
 					# or size-driven rotation.  Default is
 					# off, meaning append to existing files
 					# in all cases.
-#log_rotation_age = 1d			# Automatic rotation of logfiles will
+log_rotation_age = 1d			# Automatic rotation of logfiles will
 					# happen after that time.  0 disables.
-#log_rotation_size = 10MB		# Automatic rotation of logfiles will
+log_rotation_size = 0		# Automatic rotation of logfiles will
 					# happen after that much log output.
 					# 0 disables.
 
@@ -430,7 +430,7 @@
 #log_duration = off
 #log_error_verbosity = default		# terse, default, or verbose messages
 #log_hostname = off
-#log_line_prefix = ''			# special values:
+log_line_prefix = '< %m >'			# special values:
 					#   %a = application name
 					#   %u = user name
 					#   %d = database name
@@ -587,7 +587,7 @@
 #------------------------------------------------------------------------------
 
 #deadlock_timeout = 1s
-#max_locks_per_transaction = 64		# min 10
+max_locks_per_transaction = 150	# min 10
 					# (change requires restart)
 #max_pred_locks_per_transaction = 64	# min 10
 					# (change requires restart)
@@ -640,4 +640,10 @@
 # CUSTOMIZED OPTIONS
 #------------------------------------------------------------------------------
 
-# Add settings for extensions here
+online_analyze.threshold = 50
+online_analyze.scale_factor = 0.1
+online_analyze.enable = off
+online_analyze.verbose = off
+online_analyze.min_interval = 10000 
+online_analyze.table_type = 'temporary'
+plantuner.fix_empty_table = false
diff --git a/src/bin/pg_upgrade/Makefile b/src/bin/pg_upgrade/Makefile
index 8823288..32133b9 100644
--- src/bin/pg_upgrade/Makefile
+++ src/bin/pg_upgrade/Makefile
@@ -14,6 +14,7 @@ OBJS = check.o controldata.o dump.o exec.o file.o function.o info.o \
 override CPPFLAGS := -DDLSUFFIX=\"$(DLSUFFIX)\" -I$(srcdir) -I$(libpq_srcdir) $(CPPFLAGS)
 LDFLAGS += -L$(top_builddir)/src/fe_utils -lpgfeutils -lpq
 
+EXTRA_INSTALL += contrib/online_analyze contrib/plantuner contrib/mchar
 
 all: pg_upgrade
 
@@ -36,7 +37,7 @@ clean distclean maintainer-clean:
 	       pg_upgrade_dump_*.custom pg_upgrade_*.log
 
 check: test.sh all
-	MAKE=$(MAKE) bindir=$(bindir) libdir=$(libdir) EXTRA_REGRESS_OPTS="$(EXTRA_REGRESS_OPTS)" $(SHELL) $< --install
+	MAKE=$(MAKE) bindir=$(bindir) libdir=$(libdir) EXTRA_INSTALL="$(EXTRA_INSTALL)" EXTRA_REGRESS_OPTS="$(EXTRA_REGRESS_OPTS)" $(SHELL) $< --install
 
 # disabled because it upsets the build farm
 #installcheck: test.sh
diff --git a/src/bin/pg_upgrade/test.sh b/src/bin/pg_upgrade/test.sh
index d417932..20bc981 100644
--- src/bin/pg_upgrade/test.sh
+++ src/bin/pg_upgrade/test.sh
@@ -76,6 +76,11 @@ if [ "$1" = '--install' ]; then
 
 	"$MAKE" -s -C ../.. install DESTDIR="$temp_install"
 
+	# installing EXTRA_INSTALL dependencies
+	for extra in ${EXTRA_INSTALL}; do
+		$MAKE -s -C ../../../${extra} DESTDIR="$temp_install" install
+	done
+
 	# platform-specific magic to find the shared libraries; see pg_regress.c
 	LD_LIBRARY_PATH=$libdir:$LD_LIBRARY_PATH
 	export LD_LIBRARY_PATH
diff --git a/src/test/regress/GNUmakefile b/src/test/regress/GNUmakefile
index 469b093..522ca56 100644
--- src/test/regress/GNUmakefile
+++ src/test/regress/GNUmakefile
@@ -23,6 +23,8 @@ ifdef MAX_CONNECTIONS
 MAXCONNOPT += --max-connections=$(MAX_CONNECTIONS)
 endif
 
+EXTRA_INSTALL += contrib/online_analyze contrib/plantuner contrib/mchar
+
 # stuff to pass into build of pg_regress
 EXTRADEFS = '-DHOST_TUPLE="$(host_tuple)"' \
 	'-DSHELLPROG="$(SHELL)"' \
