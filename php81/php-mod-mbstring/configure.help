#`configure' configures this package to adapt to many kinds of systems.
#
#Usage: ./configure [OPTION]... [VAR=VALUE]...
#
#To assign environment variables (e.g., CC, CFLAGS...), specify them as
#VAR=VALUE.  See below for descriptions of some of the useful variables.
#
#Defaults for the options are specified in brackets.
#
#Configuration:
#  -h,CONFIGURE_ARGS+= --help              display this help and exit
#     CONFIGURE_ARGS+= --help=short        display options specific to this package
#     CONFIGURE_ARGS+= --help=recursive    display the short help of all the included packages
#  -V,CONFIGURE_ARGS+= --version           display version information and exit
#  -q,CONFIGURE_ARGS+= --quiet, --silent   do not print `checking ...' messages
#     CONFIGURE_ARGS+= --cache-file=FILE   cache test results in FILE [disabled]
#  -C,CONFIGURE_ARGS+= --config-cache      alias for `--cache-file=config.cache'
#  -n,CONFIGURE_ARGS+= --no-create         do not create output files
#     CONFIGURE_ARGS+= --srcdir=DIR        find the sources in DIR [configure dir or `..']
#
#Installation directories:
# CONFIGURE_ARGS+= --prefix=PREFIX         install architecture-independent files in PREFIX
#                          [/usr/local]
# CONFIGURE_ARGS+= --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
#                          [PREFIX]
#
#By default, `make install' will install all the files in
#`/usr/local/bin', `/usr/local/lib' etc.  You can specify
#an installation prefix other than `/usr/local' using `--prefix',
#for instance `--prefix=$HOME'.
#
#For better control, use the options below.
#
#Fine tuning of the installation directories:
# CONFIGURE_ARGS+= --bindir=DIR            user executables [EPREFIX/bin]
# CONFIGURE_ARGS+= --sbindir=DIR           system admin executables [EPREFIX/sbin]
# CONFIGURE_ARGS+= --libexecdir=DIR        program executables [EPREFIX/libexec]
# CONFIGURE_ARGS+= --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
# CONFIGURE_ARGS+= --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
# CONFIGURE_ARGS+= --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
# CONFIGURE_ARGS+= --libdir=DIR            object code libraries [EPREFIX/lib]
# CONFIGURE_ARGS+= --includedir=DIR        C header files [PREFIX/include]
# CONFIGURE_ARGS+= --oldincludedir=DIR     C header files for non-gcc [/usr/include]
# CONFIGURE_ARGS+= --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
# CONFIGURE_ARGS+= --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
# CONFIGURE_ARGS+= --infodir=DIR           info documentation [DATAROOTDIR/info]
# CONFIGURE_ARGS+= --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
# CONFIGURE_ARGS+= --mandir=DIR            man documentation [DATAROOTDIR/man]
# CONFIGURE_ARGS+= --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
# CONFIGURE_ARGS+= --htmldir=DIR           html documentation [DOCDIR]
# CONFIGURE_ARGS+= --dvidir=DIR            dvi documentation [DOCDIR]
# CONFIGURE_ARGS+= --pdfdir=DIR            pdf documentation [DOCDIR]
# CONFIGURE_ARGS+= --psdir=DIR             ps documentation [DOCDIR]
#
#System types:
# CONFIGURE_ARGS+= --build=BUILD     configure for building on BUILD [guessed]
# CONFIGURE_ARGS+= --host=HOST       cross-compile to build programs to run on HOST [BUILD]
# CONFIGURE_ARGS+= --target=TARGET   configure for building compilers for TARGET [HOST]
#
#Optional Features and Packages:
# CONFIGURE_ARGS+= --disable-option-checking  ignore unrecognized --enable/--with options
# CONFIGURE_ARGS+= --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
# CONFIGURE_ARGS+= --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
# CONFIGURE_ARGS+= --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
# CONFIGURE_ARGS+= --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
# CONFIGURE_ARGS+= --with-libdir=NAME      Look for libraries in .../NAME rather than .../lib
# CONFIGURE_ARGS+= --with-php-config=PATH  Path to php-config [php-config]
# CONFIGURE_ARGS+= --enable-mbstring       Enable multibyte string support
# CONFIGURE_ARGS+= --disable-mbregex       MBSTRING: Disable multibyte regex support
# CONFIGURE_ARGS+= --with-pcre-dir           MBSTRING: pcre install prefix
# CONFIGURE_ARGS+= --enable-shared=PKGS    Build shared libraries default=yes
# CONFIGURE_ARGS+= --enable-static=PKGS    Build static libraries default=yes
# CONFIGURE_ARGS+= --enable-fast-install=PKGS
#                          Optimize for fast installation default=yes
# CONFIGURE_ARGS+= --with-gnu-ld           Assume the C compiler uses GNU ld default=no
# CONFIGURE_ARGS+= --disable-libtool-lock  Avoid locking (might break parallel builds)
# CONFIGURE_ARGS+= --with-pic              Try to use only PIC/non-PIC objects default=use both
# CONFIGURE_ARGS+= --with-tags=TAGS        Include additional configurations automatic
#
#
#Some influential environment variables:
#  PKG_CONFIG  path to pkg-config utility
#  PKG_CONFIG_PATH
#              directories to add to pkg-config's search path
#  PKG_CONFIG_LIBDIR
#              path overriding pkg-config's built-in search path
#  CC          C compiler command
#  CFLAGS      C compiler flags
#  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
#              nonstandard directory <lib dir>
#  LIBS        libraries to pass to the linker, e.g. -l<library>
#  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
#              you have headers in a nonstandard directory <include dir>
#  CPP         C preprocessor
#  ONIG_CFLAGS C compiler flags for ONIG, overriding pkg-config
#  ONIG_LIBS   linker flags for ONIG, overriding pkg-config
#
#Use these variables to override the choices made by `configure' or to help
#it to find libraries and programs with nonstandard names/locations.
#
#Report bugs to the package provider.
