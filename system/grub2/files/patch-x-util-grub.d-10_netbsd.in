--- ./util/grub.d/10_netbsd.in.orig	2012-03-04 22:47:35.000000000 +0300
+++ ./util/grub.d/10_netbsd.in	2015-10-14 20:44:51.867518000 +0200
@@ -66,7 +66,7 @@
       ;;
   esac
 
-  kversion=$(zcat -f "${kernel}" | strings | sed -n -e '/^@(#)NetBSD/ { s/^@(#)NetBSD \([0-9\.]*\) .*$/\1/g ; p ; q ; }')
+  kversion=$(zcat -f "${kernel}" | strings | gsed -n -e '/^@(#)NetBSD/ { s/^@(#)NetBSD \([0-9\.]*\) .*$/\1/g ; p ; q ; }')
   kmodule="/stand/${karch}/${kversion}/modules/${kmod}/${kmod}.kmod"
 
   if test -z "$karch" -o -z "$kversion" -o ! -f "${kmodule}"; then
@@ -74,7 +74,7 @@
   fi
 
   kmodule_rel=$(make_system_path_relative_to_its_root "$kmodule") || return
-  prepare_grub_to_access_device $(${grub_probe} -t device "${kmodule}") | sed -e 's,^,	,'
+  prepare_grub_to_access_device $(${grub_probe} -t device "${kmodule}") | gsed -e 's,^,	,'
   case "${loader}" in
     knetbsd)
       printf "\tknetbsd_module_elf %s\n" "${kmodule_rel}"
@@ -94,7 +94,7 @@
   type="$3"
   args="$4"	# extra arguments appended to loader command
 
-  kroot_device="$(echo ${GRUB_DEVICE} | sed -e 's,^/dev/r,,')"
+  kroot_device="$(echo ${GRUB_DEVICE} | gsed -e 's,^/dev/r,,')"
 
   if [ -z "$boot_device_id" ]; then
       boot_device_id="$(grub_get_device_id "${GRUB_DEVICE}")"
@@ -102,40 +102,40 @@
 
   if [ x$type != xsimple ] ; then
       if [ x$type = xrecovery ] ; then
-	  title="$(gettext_printf "%s, with kernel %s (via %s, recovery mode)" "${OS}" "$(echo ${kernel} | sed -e 's,^.*/,,')" "${loader}")"
+	  title="$(gettext_printf "%s, with kernel %s (via %s, recovery mode)" "${OS}" "$(echo ${kernel} | gsed -e 's,^.*/,,')" "${loader}")"
       else
-	  title="$(gettext_printf "%s, with kernel %s (via %s)" "${OS}" "$(echo ${kernel} | sed -e 's,^.*/,,')" "${loader}")"
+	  title="$(gettext_printf "%s, with kernel %s (via %s)" "${OS}" "$(echo ${kernel} | gsed -e 's,^.*/,,')" "${loader}")"
       fi
-      replacement_title="$(echo "Advanced options for ${OS}" | sed 's,>,>>,g')>$(echo "$title" | sed 's,>,>>,g')"
+      replacement_title="$(echo "Advanced options for ${OS}" | gsed 's,>,>>,g')>$(echo "$title" | gsed 's,>,>>,g')"
       if [ x"$title" = x"$GRUB_ACTUAL_DEFAULT" ]; then
 	  quoted="$(echo "$GRUB_ACTUAL_DEFAULT" | grub_quote)"
 	  title_correction_code="${title_correction_code}if [ \"x\$default\" = '$quoted' ]; then default='$(echo "$replacement_title" | grub_quote)'; fi;"
 	  grub_warn "$(gettext_printf "Please don't use old title \`%s' for GRUB_DEFAULT, use \`%s' (for versions before 2.00) or \`%s' (for 2.00 or later)" "$GRUB_ACTUAL_DEFAULT" "$replacement_title" "netbsd-advanced-$boot_device_id>netbsd-${loader}-$kernel-$type-$boot_device_id")"
       fi
 
-      echo "menuentry '$(echo "$title" | grub_quote)' \$menuentry_id_option 'netbsd-${loader}-$kernel-$type-$boot_device_id' {"  | sed "s/^/$submenu_indentation/"
+      echo "menuentry '$(echo "$title" | grub_quote)' \$menuentry_id_option 'netbsd-${loader}-$kernel-$type-$boot_device_id' {"  | gsed "s/^/$submenu_indentation/"
   else
-      echo "menuentry '$(echo "$OS" | grub_quote)' \$menuentry_id_option 'netbsd-${loader}-simple-$boot_device_id' {"  | sed "s/^/$submenu_indentation/"
+      echo "menuentry '$(echo "$OS" | grub_quote)' \$menuentry_id_option 'netbsd-${loader}-simple-$boot_device_id' {"  | gsed "s/^/$submenu_indentation/"
   fi
 
-  printf "%s\n" "${prepare_boot_cache}" | sed "s/^/$submenu_indentation/"
+  printf "%s\n" "${prepare_boot_cache}" | gsed "s/^/$submenu_indentation/"
   case "${loader}" in
     knetbsd)
       printf "\tknetbsd %s -r %s %s\n" \
-        "${kernel}" "${kroot_device}" "${GRUB_CMDLINE_NETBSD} ${args}" | sed "s/^/$submenu_indentation/"
+        "${kernel}" "${kroot_device}" "${GRUB_CMDLINE_NETBSD} ${args}" | gsed "s/^/$submenu_indentation/"
       ;;
     multiboot)
       printf "\tmultiboot %s %s root=%s %s\n" \
-        "${kernel}" "${kernel}" "${kroot_device}" "${GRUB_CMDLINE_NETBSD} ${args}" | sed "s/^/$submenu_indentation/"
+        "${kernel}" "${kernel}" "${kroot_device}" "${GRUB_CMDLINE_NETBSD} ${args}" | gsed "s/^/$submenu_indentation/"
       ;;
   esac
 
   netbsd_load_fs_module "${loader}" "${kernel}"
 
-  printf "}\n" | sed "s/^/$submenu_indentation/"
+  printf "}\n" | gsed "s/^/$submenu_indentation/"
 }
 
-prepare_boot_cache="$(prepare_grub_to_access_device ${GRUB_DEVICE} | sed -e 's,^,	,')"
+prepare_boot_cache="$(prepare_grub_to_access_device ${GRUB_DEVICE} | gsed -e 's,^,	,')"
 boot_device_id=
 
 # We look for NetBSD kernels in / but not in subdirectories.  We simply
