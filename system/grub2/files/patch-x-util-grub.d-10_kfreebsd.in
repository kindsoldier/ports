--- ./util/grub.d/10_kfreebsd.in.orig	2012-03-05 00:02:30.000000000 +0300
+++ ./util/grub.d/10_kfreebsd.in	2015-10-14 20:43:52.518127000 +0200
@@ -54,7 +54,7 @@
   fi
 
   if [ -z "${prepare_module_dir_cache}" ]; then
-    prepare_module_dir_cache="$(prepare_grub_to_access_device $(grub-probe -t device "${module_dir}") | sed -e "s/^/\t/")"
+    prepare_module_dir_cache="$(prepare_grub_to_access_device $(grub-probe -t device "${module_dir}") | gsed -e "s/^/\t/")"
   fi
 
   printf '%s\n' "${prepare_module_dir_cache}"
@@ -80,32 +80,32 @@
       else
 	  title="$(gettext_printf "%s, with kFreeBSD %s" "${os}" "${version}")"
       fi
-      replacement_title="$(echo "Advanced options for ${OS}" | sed 's,>,>>,g')>$(echo "$title" | sed 's,>,>>,g')"
+      replacement_title="$(echo "Advanced options for ${OS}" | gsed 's,>,>>,g')>$(echo "$title" | gsed 's,>,>>,g')"
       if [ x"$title" = x"$GRUB_ACTUAL_DEFAULT" ]; then
 	  quoted="$(echo "$GRUB_ACTUAL_DEFAULT" | grub_quote)"
 	  title_correction_code="${title_correction_code}if [ \"x\$default\" = '$quoted' ]; then default='$(echo "$replacement_title" | grub_quote)'; fi;"
 	  grub_warn "$(gettext_printf "Please don't use old title \`%s' for GRUB_DEFAULT, use \`%s' (for versions before 2.00) or \`%s' (for 2.00 or later)" "$GRUB_ACTUAL_DEFAULT" "$replacement_title" "kfreebsd-advanced-$boot_device_id>kfreebsd-$version-$type-$boot_device_id")"
       fi
-      echo "menuentry '$(echo "$title" | grub_quote)' ${CLASS} \$menuentry_id_option 'kfreebsd-$version-$type-$boot_device_id' {" | sed "s/^/$submenu_indentation/"
+      echo "menuentry '$(echo "$title" | grub_quote)' ${CLASS} \$menuentry_id_option 'kfreebsd-$version-$type-$boot_device_id' {" | gsed "s/^/$submenu_indentation/"
   else
-      echo "menuentry '$(echo "$OS" | grub_quote)' ${CLASS} \$menuentry_id_option 'kfreebsd-simple-$boot_device_id' {" | sed "s/^/$submenu_indentation/"
+      echo "menuentry '$(echo "$OS" | grub_quote)' ${CLASS} \$menuentry_id_option 'kfreebsd-simple-$boot_device_id' {" | gsed "s/^/$submenu_indentation/"
   fi
   if [ x$type != xrecovery ] ; then
-      save_default_entry | sed -e "s/^/\t/" | sed "s/^/$submenu_indentation/"
+      save_default_entry | gsed -e "s/^/\t/" | gsed "s/^/$submenu_indentation/"
   fi
   if [ -z "${prepare_boot_cache}" ]; then
-    prepare_boot_cache="$(prepare_grub_to_access_device ${GRUB_DEVICE_BOOT} | sed -e "s/^/\t/")"
+    prepare_boot_cache="$(prepare_grub_to_access_device ${GRUB_DEVICE_BOOT} | gsed -e "s/^/\t/")"
   fi
 
-  printf '%s\n' "${prepare_boot_cache}" | sed "s/^/$submenu_indentation/"
+  printf '%s\n' "${prepare_boot_cache}" | gsed "s/^/$submenu_indentation/"
   message="$(gettext_printf "Loading kernel of FreeBSD %s ..." ${version})"
-  sed "s/^/$submenu_indentation/" << EOF
+  gsed "s/^/$submenu_indentation/" << EOF
 	echo			'$message'
 	kfreebsd		${rel_dirname}/${basename} ${args}
 EOF
 
   if test -n "${devices}" ; then
-      sed "s/^/$submenu_indentation/" << EOF
+      gsed "s/^/$submenu_indentation/" << EOF
 	kfreebsd_loadenv	${devices_rel_dirname}/${devices_basename}
 EOF
   fi
@@ -124,19 +124,19 @@
 
       ls "${dirname}/zfs/zpool.cache" > /dev/null
       printf '%s\n' "${prepare_boot_cache}"
-      sed "s/^/$submenu_indentation/" << EOF
+      gsed "s/^/$submenu_indentation/" << EOF
 	kfreebsd_module		${rel_dirname}/zfs/zpool.cache type=/boot/zfs/zpool.cache
 EOF
     ;;
   esac
 
   if [ x${kfreebsd_fs} = xufs ]; then
-	load_kfreebsd_module ${kfreebsd_fs} true | sed "s/^/$submenu_indentation/"
+	load_kfreebsd_module ${kfreebsd_fs} true | gsed "s/^/$submenu_indentation/"
   else
-	load_kfreebsd_module ${kfreebsd_fs} false | sed "s/^/$submenu_indentation/"
+	load_kfreebsd_module ${kfreebsd_fs} false | gsed "s/^/$submenu_indentation/"
   fi
 
-  sed "s/^/$submenu_indentation/" << EOF
+  gsed "s/^/$submenu_indentation/" << EOF
 	set kFreeBSD.vfs.root.mountfrom=${kfreebsd_fs}:${kfreebsd_device}
 	set kFreeBSD.vfs.root.mountfrom.options=rw
 }
@@ -181,7 +181,7 @@
 			# zpool name
 			kfreebsd_device=$(grub-probe -t fs_label --device ${GRUB_DEVICE})
 			# filesystem name (empty string for the main filesystem)
-			kfreebsd_device="${kfreebsd_device}$(${grub_mkrelpath} / | sed -e "s,/*@$,,")"
+			kfreebsd_device="${kfreebsd_device}$(${grub_mkrelpath} / | gsed -e "s,/*@$,,")"
     ;;
     *)
 	  kfreebsd_device=${kfreebsd_fs}id/${GRUB_DEVICE_UUID}
@@ -195,8 +195,8 @@
 	  ;;
   esac
 
-  version=`echo $basename | sed -e "s,^[^0-9]*-,,g;s/\.gz$//g"`
-  alt_version=`echo $version | sed -e "s,\.old$,,g"`
+  version=`echo $basename | gsed -e "s,^[^0-9]*-,,g;s/\.gz$//g"`
+  alt_version=`echo $version | gsed -e "s,\.old$,,g"`
 
   module_dir=
   for i in "/lib/modules/${version}" "/lib/modules/${alt_version}" \
