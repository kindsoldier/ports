--- ./configure.orig	2015-05-07 16:14:56.000000000 +0200
+++ ./configure	2019-03-22 13:54:51.927825000 +0200
@@ -454,7 +454,7 @@
         echo "Type 'c' if you want to use the Commercial Edition."
         echo "Type 'o' if you want to use the Open Source Edition."
         echo
-        read commercial
+        commercial="o"
         echo
         if [ "$commercial" = "c" ]; then
             COMMERCIAL_USER="yes"
@@ -726,7 +726,7 @@
 # QTDIR may be set and point to an old or system-wide Qt installation
 unset QTDIR
 
-# the minimum version of libdbus-1 that we require:
+# the minimum version of libdbus that we require:
 MIN_DBUS_1_VERSION=0.93
 
 # initalize internal variables
@@ -843,7 +843,7 @@
 CFG_DBUS=auto
 CFG_GLIB=auto
 CFG_GSTREAMER=auto
-CFG_QGTKSTYLE=auto
+CFG_QGTKSTYLE=yes
 CFG_QS60STYLE=auto
 CFG_LARGEFILE=auto
 CFG_OPENSSL=auto
@@ -952,7 +952,7 @@
 QT_LFLAGS_ODBC="-lodbc"
 QT_LFLAGS_TDS=
 
-# flags for libdbus-1
+# flags for libdbus
 QT_CFLAGS_DBUS=
 QT_LIBS_DBUS=
 
@@ -2665,7 +2665,7 @@
     [ -d "$outpath/bin" ] || mkdir -p "$outpath/bin"
 
     # symlink the qmake directory
-    find "$relpath/qmake" | while read a; do
+    find "$relpath/qmake-qt4" | while read a; do
         my_a=`echo "$a" | sed "s,^${relpath}/,${outpath}/,"`
         if [ '!' -f "$my_a" ]; then
             if [ -d "$a" ]; then
@@ -4155,8 +4155,8 @@
  $PHY  -pch ............... Use precompiled header support.
 
  $DBN  -no-dbus ........... Do not compile the QtDBus module.
- $DBY  -dbus .............. Compile the QtDBus module and dynamically load libdbus-1.
-    -dbus-linked ....... Compile the QtDBus module and link to libdbus-1.
+ $DBY  -dbus .............. Compile the QtDBus module and dynamically load libdbus.
+    -dbus-linked ....... Compile the QtDBus module and link to libdbus.
 
     -reduce-relocations ..... Reduce relocations in the libraries through extra
                               linker optimizations (Qt/X11 and Qt for Embedded Linux only;
@@ -4919,7 +4919,7 @@
 }
 
 # build qmake
-if true; then ###[ '!' -f "$outpath/bin/qmake" ];
+if true; then ###[ '!' -f "$outpath/bin/qmake-qt4" ];
     echo "Creating qmake. Please wait..."
 
     OLD_QCONFIG_H=
@@ -5100,7 +5100,7 @@
     (echo TEMPLATE = subdirs
      echo 'message($$PKG_CONFIG)') > "$outpath/dummy.pro"
     echo "QT_BUILD_TREE = $outpath" > "$outpath/.qmake.cache.pkgconfig"
-    PKG_CONFIG=`"$outpath/bin/qmake" -cache "$outpath/.qmake.cache.pkgconfig" -spec "$XQMAKESPEC" "$outpath/dummy.pro" -o /dev/null 2>&1 > /dev/null | sed -n -e 's,Project MESSAGE: \(.*\),\1,p'`
+    PKG_CONFIG=`"$outpath/bin/qmake-qt4" -cache "$outpath/.qmake.cache.pkgconfig" -spec "$XQMAKESPEC" "$outpath/dummy.pro" -o /dev/null 2>&1 > /dev/null | sed -n -e 's,Project MESSAGE: \(.*\),\1,p'`
     rm "$outpath/.qmake.cache.pkgconfig" "$outpath/dummy.pro"
 fi
 if [ -z "$PKG_CONFIG" ]; then
@@ -5836,11 +5836,11 @@
     fi
 fi
 
-# auto-detect libdbus-1 support
+# auto-detect libdbus support
 if [ "$CFG_DBUS" != "no" ]; then
-    if [ -n "$PKG_CONFIG" ] && $PKG_CONFIG --atleast-version="$MIN_DBUS_1_VERSION" dbus-1 2>/dev/null; then
-        QT_CFLAGS_DBUS=`$PKG_CONFIG --cflags dbus-1 2>/dev/null`
-        QT_LIBS_DBUS=`$PKG_CONFIG --libs dbus-1 2>/dev/null`
+    if [ -n "$PKG_CONFIG" ] && $PKG_CONFIG --atleast-version="$MIN_DBUS_1_VERSION" dbus 2>/dev/null; then
+        QT_CFLAGS_DBUS=`$PKG_CONFIG --cflags dbus 2>/dev/null`
+        QT_LIBS_DBUS=`$PKG_CONFIG --libs dbus 2>/dev/null`
     fi
     if compileTest unix/dbus "D-Bus" $QT_CFLAGS_DBUS $QT_LIBS_DBUS; then
         [ "$CFG_DBUS" = "auto" ] && CFG_DBUS=yes
@@ -5852,7 +5852,7 @@
         elif [ "$CFG_CONFIGURE_EXIT_ON_ERROR" = "yes" ]; then
             # CFG_DBUS is "yes" or "linked" here
 
-            echo "The QtDBus module cannot be enabled because libdbus-1 version $MIN_DBUS_1_VERSION was not found."
+            echo "The QtDBus module cannot be enabled because libdbus version $MIN_DBUS_1_VERSION was not found."
             echo " Turn on verbose messaging (-v) to $0 to see the final report."
             echo " If you believe this message is in error you may use the continue"
             echo " switch (-continue) to $0 to continue."
@@ -5883,8 +5883,8 @@
     # auto-detect Glib support
     if [ "$CFG_GLIB" != "no" ]; then
         if [ -n "$PKG_CONFIG" ]; then
-            QT_CFLAGS_GLIB=`$PKG_CONFIG --cflags glib-2.0 gthread-2.0 2>/dev/null`
-            QT_LIBS_GLIB=`$PKG_CONFIG --libs glib-2.0 gthread-2.0 2>/dev/null`
+            QT_CFLAGS_GLIB=`$PKG_CONFIG --cflags glib gthread 2>/dev/null`
+            QT_LIBS_GLIB=`$PKG_CONFIG --libs glib gthread 2>/dev/null`
         fi
         if compileTest unix/glib "Glib" $QT_CFLAGS_GLIB $QT_LIBS_GLIB $X11TESTS_FLAGS ; then
             CFG_GLIB=yes
@@ -5918,8 +5918,8 @@
     if [ "$CFG_PHONON" != "no" ]; then
         if [ "$CFG_GLIB" = "yes" -a "$CFG_GSTREAMER" != "no" ]; then
             if [ -n "$PKG_CONFIG" ]; then
-                QT_CFLAGS_GSTREAMER=`$PKG_CONFIG --cflags gstreamer-0.10 gstreamer-plugins-base-0.10 2>/dev/null`
-                QT_LIBS_GSTREAMER=`$PKG_CONFIG --libs gstreamer-0.10 gstreamer-plugins-base-0.10 2>/dev/null`
+                QT_CFLAGS_GSTREAMER=`$PKG_CONFIG --cflags gstreamer gstreamer-plugins-base 2>/dev/null`
+                QT_LIBS_GSTREAMER=`$PKG_CONFIG --libs gstreamer gstreamer-plugins-base 2>/dev/null`
             fi
             if compileTest unix/gstreamer "GStreamer" $QT_CFLAGS_GSTREAMER $QT_LIBS_GSTREAMER $X11TESTS_FLAGS; then
                 CFG_GSTREAMER=yes
@@ -6409,8 +6409,8 @@
 
     if [ "$CFG_GLIB" = "yes" -a "$CFG_QGTKSTYLE" != "no" ]; then
         if [ -n "$PKG_CONFIG" ]; then
-            QT_CFLAGS_QGTKSTYLE=`$PKG_CONFIG --cflags gtk+-2.0 ">=" 2.10 atk 2>/dev/null`
-            QT_LIBS_QGTKSTYLE=`$PKG_CONFIG --libs gobject-2.0 2>/dev/null`
+            QT_CFLAGS_QGTKSTYLE=`$PKG_CONFIG --cflags gtk+ ">=" 2.10 atk 2>/dev/null`
+            QT_LIBS_QGTKSTYLE=`$PKG_CONFIG --libs gobject 2>/dev/null`
         fi
         if [ -n "$QT_CFLAGS_QGTKSTYLE" ] ; then
             CFG_QGTKSTYLE=yes
@@ -8766,10 +8766,10 @@
 QMAKE_MOC_SRC    = \$\$QT_BUILD_TREE/src/moc
 
 #local paths that cannot be queried from the QT_INSTALL_* properties while building QTDIR
-QMAKE_MOC        = \$\$QT_BUILD_TREE/bin/moc
-QMAKE_UIC        = \$\$QT_BUILD_TREE/bin/uic
+QMAKE_MOC        = \$\$QT_BUILD_TREE/bin/moc-qt4
+QMAKE_UIC        = \$\$QT_BUILD_TREE/bin/uic-qt4
 QMAKE_UIC3       = \$\$QT_BUILD_TREE/bin/uic3
-QMAKE_RCC        = \$\$QT_BUILD_TREE/bin/rcc
+QMAKE_RCC        = \$\$QT_BUILD_TREE/bin/rcc-qt4
 QMAKE_QDBUSXML2CPP = \$\$QT_BUILD_TREE/bin/qdbusxml2cpp
 QMAKE_INCDIR_QT  = \$\$QT_BUILD_TREE/include
 QMAKE_LIBDIR_QT  = \$\$QT_BUILD_TREE/lib
@@ -9175,11 +9175,11 @@
 
 echo "Finding project files. Please wait..."
 if [ "$CFG_NOPROCESS" != "yes" ]; then
-    "$outpath/bin/qmake" -prl -r "${relpath}/projects.pro"
+    "$outpath/bin/qmake-qt4" -prl -r "${relpath}/projects.pro"
     if [ -f "${relpath}/projects.pro" ]; then
         mkfile="${outpath}/Makefile"
         [ -f "$mkfile" ] && chmod +w "$mkfile"
-        QTDIR="$outpath" "$outpath/bin/qmake" -spec "$XQMAKESPEC" "${relpath}/projects.pro" -o "$mkfile"
+        QTDIR="$outpath" "$outpath/bin/qmake-qt4" -spec "$XQMAKESPEC" "${relpath}/projects.pro" -o "$mkfile"
     fi
 fi
 
@@ -9366,7 +9366,7 @@
         QMAKE_SPEC_ARGS="-spec $SPEC"
         echo $ECHO_N "  for $a$ECHO_C"
 
-        QMAKE="$outpath/bin/qmake"
+        QMAKE="$outpath/bin/qmake-qt4"
 	QMAKE_ARGS="$QMAKE_SWITCHES $QMAKE_SPEC_ARGS"
         if [ "$file" = ".projects.3" ]; then
             echo " (fast)"
